name: Automatic Branch Synchronization

on:
  pull_request:
    branches: [ development, qa, staging, master ]
    types: [opened, synchronize, reopened]

jobs:
  sync-branches:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}  # Checkout the PR branch
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Debug Info
        run: |
          echo "DEBUG: Event name = ${{ github.event_name }}"
          echo "DEBUG: Base ref = ${{ github.base_ref }}"
          echo "DEBUG: Head ref = ${{ github.head_ref }}"
          echo "DEBUG: Ref = ${{ github.ref }}"
          echo "DEBUG: Repository = ${{ github.repository }}"
      
      - name: Configure Git
        run: |
          git config user.name "GitHub Action"
          git config user.email "action@github.com"
          echo "DEBUG: Git config set"
      
      - name: Check and sync branches
        run: |
          BASE_BRANCH="${{ github.base_ref }}"
          HEAD_BRANCH="${{ github.head_ref }}"
          echo "DEBUG: Base branch = $BASE_BRANCH"
          echo "DEBUG: Head branch = $HEAD_BRANCH"
          
          case "$BASE_BRANCH" in
            "development")
              upstream_branch="qa"
              ;;
            "qa")
              upstream_branch="staging"
              ;;
            "staging")
              upstream_branch="master"
              ;;
            "master")
              upstream_branch=""
              ;;
          esac
          
          echo "DEBUG: Upstream branch = $upstream_branch"
          
          if [ ! -z "$upstream_branch" ]; then
            echo "DEBUG: Fetching upstream branch $upstream_branch"
            git fetch origin $upstream_branch
            echo "DEBUG: Fetch exit code = $?"
            
            # Try to merge upstream branch into the PR branch
            echo "DEBUG: Attempting to merge $upstream_branch into $HEAD_BRANCH"
            if ! git merge origin/$upstream_branch --no-edit; then
              echo "ERROR: Merge conflicts detected between $HEAD_BRANCH and $upstream_branch"
              echo "Please manually merge $upstream_branch into your branch and resolve conflicts:"
              echo "git checkout $HEAD_BRANCH"
              echo "git pull origin $upstream_branch"
              git status
              exit 1
            fi
            
            # If merge successful, push changes back to the PR branch
            echo "DEBUG: Pushing merged changes to $HEAD_BRANCH"
            if ! git push origin HEAD:$HEAD_BRANCH; then
              echo "ERROR: Failed to push merged changes"
              exit 1
            fi
            
            echo "âœ… Successfully synchronized $HEAD_BRANCH with $upstream_branch"
          fi